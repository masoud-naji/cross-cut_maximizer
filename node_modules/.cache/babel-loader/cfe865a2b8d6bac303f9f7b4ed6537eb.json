{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Components/UI/Card\";\nimport AddUser from \"./Components/User/AddUser\";\nimport SearchUserList from \"./Components/User/SearchUserList\";\nimport classes from \"./Components/User/AddUser.module.css\";\nimport useFetch from \"./Components/CustomHooks/useFetch\";\nimport { useHistory } from \"react-router\"; // import UserList from \"./Components/User/UserList\";\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\n\nfunction Home() {\n  _s();\n\n  // const [usersList, setUsersList] = useState(UserData);\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  const history = useHistory();\n  const [isAdded, setIsAdded] = useState(false);\n  useEffect(() => {\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        // error coming back from server\n        throw Error(\"could not fetch the data for that resource\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setIsPending(false);\n      setData(data);\n      setError(null);\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(\"fetch aborted\");\n      } else {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      }\n    });\n  }, [isAdded]); // const {\n  //   data: usersList,\n  //   isPending,\n  //   error,\n  // } = useFetch(\"http://localhost:8000/AllUsers\");\n\n  const handleadded = isitAdded => {\n    console.log(isitAdded);\n    setIsAdded(true);\n  };\n\n  const deleteHandler = id => {\n    // const newUserslist = usersList.filter((userlist) => userlist.id !== id);\n    // setData(newUserslist);\n    fetch(\"http://localhost:8000/AllUsers/\" + id, {\n      method: \"DELETE\"\n    }).then(() => {\n      history.push(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddUser, {\n    isAdded: handleadded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), error && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, error)), isPending && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"... Loading\")), usersList && /*#__PURE__*/React.createElement(SearchUserList, {\n    Users: usersList,\n    Ondelete: deleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(Home, \"BIOyYPkAhsOXYoEs5mSCmKkZ4b0=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home; //npx json-server --watch Post/db.json --port 8000\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Home.js"],"names":["React","useEffect","useState","Card","AddUser","SearchUserList","classes","useFetch","useHistory","Home","data","setData","isPending","setIsPending","error","setError","history","isAdded","setIsAdded","fetch","url","signal","abortCont","then","res","ok","Error","json","catch","err","name","console","log","message","handleadded","isitAdded","deleteHandler","id","method","push","input","usersList"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Components/UI/Card\";\r\nimport AddUser from \"./Components/User/AddUser\";\r\nimport SearchUserList from \"./Components/User/SearchUserList\";\r\nimport classes from \"./Components/User/AddUser.module.css\";\r\nimport useFetch from \"./Components/CustomHooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n// import UserList from \"./Components/User/UserList\";\r\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\r\n\r\nfunction Home() {\r\n  // const [usersList, setUsersList] = useState(UserData);\r\n\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [isAdded, setIsAdded] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(url, { signal: abortCont.signal })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          // error coming back from server\r\n          throw Error(\"could not fetch the data for that resource\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"fetch aborted\");\r\n        } else {\r\n          // auto catches network / connection error\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      });\r\n  },[isAdded])\r\n  \r\n\r\n\r\n\r\n  // const {\r\n  //   data: usersList,\r\n  //   isPending,\r\n  //   error,\r\n  // } = useFetch(\"http://localhost:8000/AllUsers\");\r\n\r\n  const handleadded = (isitAdded) => {\r\n    console.log(isitAdded);\r\n    setIsAdded(true);\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    // const newUserslist = usersList.filter((userlist) => userlist.id !== id);\r\n    // setData(newUserslist);\r\n    fetch(\"http://localhost:8000/AllUsers/\" + id, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AddUser isAdded={handleadded} />\r\n      {error && (\r\n        <Card className={classes.input}>\r\n          <h2>{error}</h2>\r\n        </Card>\r\n      )}\r\n      {isPending && (\r\n        <Card className={classes.input}>\r\n          <h2>... Loading</h2>\r\n        </Card>\r\n      )}\r\n      {usersList && (\r\n        <SearchUserList Users={usersList} Ondelete={deleteHandler} />\r\n      )}\r\n      {/* {usersList && <UserList Users={usersList} Ondelete={deleteHandler} />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n//npx json-server --watch Post/db.json --port 8000\r\n"]},"metadata":{},"sourceType":"module"}