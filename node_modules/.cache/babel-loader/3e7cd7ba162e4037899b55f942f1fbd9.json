{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Components\\\\User\\\\AddUser.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"../UI/Button\";\n\nconst AddUser = () => {\n  _s();\n\n  const [isPending, setIsPending] = useState(false);\n  const [first_name, setfirst_name] = useState(\"\");\n  const [last_name, setlast_name] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [Job, setJob] = useState(\"\");\n  const [DateOfBirth, setDateofBirth] = useState(\"\");\n  const [Donate, setDonate] = useState(\"\");\n\n  const first_nameChangeHandler = event => {\n    setfirst_name(event.target.value);\n  };\n\n  const last_nameChangeHandler = event => {\n    setlast_name(event.target.value);\n  };\n\n  const EmailChangeHandler = event => {\n    setEmail(event.target.value);\n  };\n\n  const JobChangeHandler = event => {\n    setJob(event.target.value);\n  };\n\n  const DateofBirthChangeHandler = event => {\n    setDateofBirth(event.target.value);\n  };\n\n  const DonateChangeHandler = event => {\n    setDonate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setIsPending(true); // const myid = Math.random(1 * 100); json server gonna add id automaticaly\n\n    const userTableData = {\n      // id: myid,\n      first_name,\n      last_name,\n      email,\n      Job,\n      DateOfBirth,\n      Donate\n    };\n    console.log(userTableData);\n    fetch(\"http://localhost:8000/AllUsers\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userTableData)\n    }).then(() => {\n      setIsPending(false);\n      console.log(\"new User added\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"first_name\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    value: first_name,\n    onChange: first_nameChangeHandler,\n    id: \"first_name\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"last_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"last_name\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    value: last_name,\n    onChange: last_nameChangeHandler,\n    id: \"last_name\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    value: email,\n    onChange: EmailChangeHandler,\n    id: \"Email\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Job\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Job\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    value: Job,\n    onChange: JobChangeHandler,\n    id: \"Job\",\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Donate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"Donate\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: {\n      Donate\n    } ? {\n      Donate\n    } : 0,\n    onChange: DonateChangeHandler,\n    id: \"Donate\",\n    type: \"number\",\n    min: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"DateofBirth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Date of Birth\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    value: DateOfBirth,\n    onChange: DateofBirthChangeHandler,\n    id: \"DateofBirth\",\n    type: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), !isPending && /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 24\n    }\n  }, \" Add User \"), isPending && /*#__PURE__*/React.createElement(Button, {\n    disabled: true,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"...Adding\")));\n};\n\n_s(AddUser, \"9AhVyDA6ermTTTz3rl/3qZhi+B0=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Components/User/AddUser.jsx"],"names":["React","useState","Card","classes","Button","AddUser","isPending","setIsPending","first_name","setfirst_name","last_name","setlast_name","email","setEmail","Job","setJob","DateOfBirth","setDateofBirth","Donate","setDonate","first_nameChangeHandler","event","target","value","last_nameChangeHandler","EmailChangeHandler","JobChangeHandler","DateofBirthChangeHandler","DonateChangeHandler","submitHandler","preventDefault","userTableData","console","log","fetch","method","headers","body","JSON","stringify","then","input"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport classes from \"./AddUser.module.css\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst AddUser = () => {\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [first_name, setfirst_name] = useState(\"\");\r\n  const [last_name, setlast_name] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [Job, setJob] = useState(\"\");\r\n  const [DateOfBirth, setDateofBirth] = useState(\"\");\r\n  const [Donate, setDonate] = useState(\"\");\r\n\r\n  const first_nameChangeHandler = (event) => {\r\n    setfirst_name(event.target.value);\r\n  };\r\n  const last_nameChangeHandler = (event) => {\r\n    setlast_name(event.target.value);\r\n  };\r\n  const EmailChangeHandler = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n  const JobChangeHandler = (event) => {\r\n    setJob(event.target.value);\r\n  };\r\n  const DateofBirthChangeHandler = (event) => {\r\n    setDateofBirth(event.target.value);\r\n  };\r\n  const DonateChangeHandler = (event) => {\r\n    setDonate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    setIsPending(true);\r\n    // const myid = Math.random(1 * 100); json server gonna add id automaticaly\r\n    const userTableData = {\r\n      // id: myid,\r\n      first_name,\r\n      last_name,\r\n      email,\r\n      Job,\r\n      DateOfBirth,\r\n      Donate,\r\n    };\r\n    console.log(userTableData);\r\n    fetch(\"http://localhost:8000/AllUsers\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(userTableData),\r\n    }).then(() => {\r\n      setIsPending(false);\r\n      console.log(\"new User added\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.input}>\r\n      <form onSubmit={submitHandler}>\r\n        <label htmlFor=\"first_name\">first_name</label>\r\n        <input\r\n          required\r\n          value={first_name}\r\n          onChange={first_nameChangeHandler}\r\n          id=\"first_name\"\r\n          type=\"text\"\r\n        />\r\n        <label htmlFor=\"last_name\">last_name</label>\r\n        <input\r\n          required\r\n          value={last_name}\r\n          onChange={last_nameChangeHandler}\r\n          id=\"last_name\"\r\n          type=\"text\"\r\n        />\r\n        <label htmlFor=\"Email\">Email</label>\r\n        <input\r\n          required\r\n          value={email}\r\n          onChange={EmailChangeHandler}\r\n          id=\"Email\"\r\n          type=\"text\"\r\n        />\r\n        <label htmlFor=\"Job\">Job</label>\r\n        <input\r\n          required\r\n          value={Job}\r\n          onChange={JobChangeHandler}\r\n          id=\"Job\"\r\n          type=\"text\"\r\n        />\r\n        <label htmlFor=\"Donate\">Donate</label>\r\n        <input\r\n          value={{ Donate }  ? { Donate } : 0}\r\n          onChange={DonateChangeHandler}\r\n          id=\"Donate\"\r\n          type=\"number\"\r\n          min=\"0\"\r\n        />\r\n        <label htmlFor=\"DateofBirth\">Date of Birth</label>\r\n        <input\r\n          required\r\n          value={DateOfBirth}\r\n          onChange={DateofBirthChangeHandler}\r\n          id=\"DateofBirth\"\r\n          type=\"date\"\r\n        />\r\n        {!isPending && <Button type=\"submit\"> Add User </Button>}\r\n        {isPending && (\r\n          <Button disabled type=\"submit\">\r\n            ...Adding\r\n          </Button>\r\n        )}\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"]},"metadata":{},"sourceType":"module"}