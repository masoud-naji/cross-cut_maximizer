{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Components/UI/Card\";\nimport AddUser from \"./Components/User/AddUser\";\nimport SearchUserList from \"./Components/User/SearchUserList\";\nimport classes from \"./Components/User/AddUser.module.css\";\nimport useFetch from \"./Components/CustomHooks/useFetch\";\nimport { useHistory } from \"react-router\"; // import UserList from \"./Components/User/UserList\";\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\n\nconst Home = props => {\n  _s();\n\n  const history = useHistory();\n  const [status, setStatus] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [anychangehappend, setAnyChangeHappend] = useState(false);\n  const url = \"http://localhost:8000/AllUsers\";\n  const {\n    data: usersList,\n    isPending,\n    error\n  } = useFetch(url); ////////////////////////////////Fetch Handler Local//////////////////////////////////////////////\n  // const [data, setData] = useState(null);\n  // const [isPending, setIsPending] = useState(true);\n  // const [error, setError] = useState(null);\n  // useEffect(() => {\n  //   const abortCont = new AbortController();\n  //   setTimeout(() => {\n  //     fetch(url, { signal: abortCont.signal })\n  //     .then(res => {\n  //       if (!res.ok) { // error coming back from server\n  //         throw Error('could not fetch the data for that resource');\n  //       } \n  //       return res.json();\n  //     })\n  //     .then(data => {\n  //       setIsPending(false);\n  //       setData(data);\n  //       setError(null);\n  //     })\n  //     .catch(err => {\n  //       if (err.name === 'AbortError') {\n  //         console.log('fetch aborted')\n  //       } else {\n  //         // auto catches network / connection error\n  //         setIsPending(false);\n  //         setError(err.message);\n  //       }\n  //     })\n  //   }, 1000);\n  //   // abort the fetch\n  //   return () => abortCont.abort();\n  // }, [url, anychangehappend]);\n  /////////////////////////////////Delete Handler/////////////////////////////////////////////\n\n  const deleteHandler = id => {\n    fetch(url + \"/\" + id, {\n      method: \"DELETE\"\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      setStatus(\"Delete successful\");\n      props.isChanging(status);\n    }).catch(error => {\n      setErrorMessage(error);\n      console.error(\"There was an error!\", errorMessage);\n    });\n    setAnyChangeHappend(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, props.showNewUser ? /*#__PURE__*/React.createElement(AddUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 42\n    }\n  }), error && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, error)), isPending && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"... Loading\")), usersList && /*#__PURE__*/React.createElement(SearchUserList, {\n    Users: data,\n    Ondelete: deleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }));\n};\n\n_s(Home, \"e8puAcu0tzHqCLMBj6wmaGTNJTo=\", false, function () {\n  return [useHistory, useFetch];\n});\n\n_c = Home;\nexport default Home; //npx json-server --watch Post/db.json --port 8000\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Home.js"],"names":["React","useEffect","useState","Card","AddUser","SearchUserList","classes","useFetch","useHistory","Home","props","history","status","setStatus","errorMessage","setErrorMessage","anychangehappend","setAnyChangeHappend","url","data","usersList","isPending","error","deleteHandler","id","fetch","method","then","response","json","ok","message","Promise","reject","isChanging","catch","console","showNewUser","input"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Components/UI/Card\";\r\nimport AddUser from \"./Components/User/AddUser\";\r\nimport SearchUserList from \"./Components/User/SearchUserList\";\r\nimport classes from \"./Components/User/AddUser.module.css\";\r\nimport useFetch from \"./Components/CustomHooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n// import UserList from \"./Components/User/UserList\";\r\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\r\n\r\nconst Home = (props) => {\r\n  const history = useHistory();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [anychangehappend, setAnyChangeHappend] = useState(false);\r\n  const url = \"http://localhost:8000/AllUsers\";\r\n  const { data: usersList, isPending, error } = useFetch(url);\r\n  ////////////////////////////////Fetch Handler Local//////////////////////////////////////////////\r\n\r\n  // const [data, setData] = useState(null);\r\n  // const [isPending, setIsPending] = useState(true);\r\n  // const [error, setError] = useState(null);\r\n\r\n  // useEffect(() => {\r\n  //   const abortCont = new AbortController();\r\n\r\n  //   setTimeout(() => {\r\n  //     fetch(url, { signal: abortCont.signal })\r\n  //     .then(res => {\r\n  //       if (!res.ok) { // error coming back from server\r\n  //         throw Error('could not fetch the data for that resource');\r\n  //       } \r\n  //       return res.json();\r\n  //     })\r\n  //     .then(data => {\r\n  //       setIsPending(false);\r\n  //       setData(data);\r\n  //       setError(null);\r\n  //     })\r\n  //     .catch(err => {\r\n  //       if (err.name === 'AbortError') {\r\n  //         console.log('fetch aborted')\r\n  //       } else {\r\n  //         // auto catches network / connection error\r\n  //         setIsPending(false);\r\n  //         setError(err.message);\r\n  //       }\r\n  //     })\r\n  //   }, 1000);\r\n\r\n  //   // abort the fetch\r\n  //   return () => abortCont.abort();\r\n  // }, [url, anychangehappend]);\r\n\r\n  /////////////////////////////////Delete Handler/////////////////////////////////////////////\r\n  const deleteHandler = (id) => {\r\n    fetch(url + \"/\" + id, { method: \"DELETE\" })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setStatus(\"Delete successful\");\r\n        props.isChanging(status);\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(error);\r\n        console.error(\"There was an error!\", errorMessage);\r\n      });\r\n    setAnyChangeHappend(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.showNewUser ? <AddUser /> : <h2></h2>}\r\n\r\n      {error && (\r\n        <Card className={classes.input}>\r\n          <h2>{error}</h2>\r\n        </Card>\r\n      )}\r\n      {isPending && (\r\n        <Card className={classes.input}>\r\n          <h2>... Loading</h2>\r\n        </Card>\r\n      )}\r\n      {usersList && <SearchUserList Users={data} Ondelete={deleteHandler} />}\r\n      {/* {usersList && <UserList Users={usersList} Ondelete={deleteHandler} />} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n//npx json-server --watch Post/db.json --port 8000\r\n"]},"metadata":{},"sourceType":"module"}