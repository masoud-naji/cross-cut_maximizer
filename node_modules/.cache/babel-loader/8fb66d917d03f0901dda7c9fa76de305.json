{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Components/UI/Card\";\nimport AddUser from \"./Components/User/AddUser\";\nimport SearchUserList from \"./Components/User/SearchUserList\";\nimport classes from \"./Components/User/AddUser.module.css\";\nimport useFetch from \"./Components/CustomHooks/useFetch\";\nimport { useHistory } from \"react-router\"; // import UserList from \"./Components/User/UserList\";\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\n\nconst Home = props => {\n  _s();\n\n  const history = useHistory();\n  const [status, setStatus] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const url = \"http://localhost:8000/AllUsers\"; //const { data: usersList, isPending, error } = useFetch(url);\n\n  const deleteHandler = id => {\n    fetch(url + \"/\" + id, {\n      method: \"DELETE\"\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      setStatus(\"Delete successful\");\n      props.isChanging(status);\n    }).catch(error => {\n      setErrorMessage(error);\n      console.error(\"There was an error!\", errorMessage);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, props.showNewUser ? /*#__PURE__*/React.createElement(AddUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 42\n    }\n  }), error && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, error)), isPending && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"... Loading\")), usersList && /*#__PURE__*/React.createElement(SearchUserList, {\n    Users: usersList,\n    Ondelete: deleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(Home, \"OJcYs207EH1MHPV/YU+awW+IGMY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home; //npx json-server --watch Post/db.json --port 8000\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Home.js"],"names":["React","useEffect","useState","Card","AddUser","SearchUserList","classes","useFetch","useHistory","Home","props","history","status","setStatus","errorMessage","setErrorMessage","url","deleteHandler","id","fetch","method","then","response","data","json","ok","error","message","Promise","reject","isChanging","catch","console","showNewUser","input","isPending","usersList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;AACA;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,OAAO,GAAGH,UAAU,EAA1B;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMc,GAAG,GAAG,gCAAZ,CAJsB,CAKtB;;AAOA,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5BC,IAAAA,KAAK,CAACH,GAAG,GAAG,GAAN,GAAYE,EAAb,EAAiB;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAjB,CAAL,CACGC,IADH,CACQ,MAAOC,QAAP,IAAoB;AACxB,YAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB,CADwB,CAGxB;;AACA,UAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AAChB;AACA,cAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BL,QAAQ,CAACV,MAAjD;AACA,eAAOgB,OAAO,CAACC,MAAR,CAAeH,KAAf,CAAP;AACD;;AAEDb,MAAAA,SAAS,CAAC,mBAAD,CAAT;AACAH,MAAAA,KAAK,CAACoB,UAAN,CAAiBlB,MAAjB;AACD,KAbH,EAcGmB,KAdH,CAcUL,KAAD,IAAW;AAChBX,MAAAA,eAAe,CAACW,KAAD,CAAf;AACAM,MAAAA,OAAO,CAACN,KAAR,CAAc,qBAAd,EAAqCZ,YAArC;AACD,KAjBH;AAkBD,GAnBD;;AAqBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACuB,WAAN,gBAAoB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,gBAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,EAGGP,KAAK,iBACJ,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEpB,OAAO,CAAC4B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,KAAL,CADF,CAJJ,EAQGS,SAAS,iBACR,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE7B,OAAO,CAAC4B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CATJ,EAaGE,SAAS,iBACR,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA,SAAvB;AAAkC,IAAA,QAAQ,EAAEnB,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADF;AAoBD,CArDD;;GAAMR,I;UACYD,U;;;KADZC,I;AAuDN,eAAeA,IAAf,C,CAEA","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Components/UI/Card\";\r\nimport AddUser from \"./Components/User/AddUser\";\r\nimport SearchUserList from \"./Components/User/SearchUserList\";\r\nimport classes from \"./Components/User/AddUser.module.css\";\r\nimport useFetch from \"./Components/CustomHooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n// import UserList from \"./Components/User/UserList\";\r\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\r\n\r\nconst Home = (props) => {\r\n  const history = useHistory();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const url = \"http://localhost:8000/AllUsers\";\r\n  //const { data: usersList, isPending, error } = useFetch(url);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const deleteHandler = (id) => {\r\n    fetch(url + \"/\" + id, { method: \"DELETE\" })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setStatus(\"Delete successful\");\r\n        props.isChanging(status);\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(error);\r\n        console.error(\"There was an error!\", errorMessage);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.showNewUser ? <AddUser /> : <h2></h2>}\r\n\r\n      {error && (\r\n        <Card className={classes.input}>\r\n          <h2>{error}</h2>\r\n        </Card>\r\n      )}\r\n      {isPending && (\r\n        <Card className={classes.input}>\r\n          <h2>... Loading</h2>\r\n        </Card>\r\n      )}\r\n      {usersList && (\r\n        <SearchUserList Users={usersList} Ondelete={deleteHandler} />\r\n      )}\r\n      {/* {usersList && <UserList Users={usersList} Ondelete={deleteHandler} />} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n//npx json-server --watch Post/db.json --port 8000\r\n"]},"metadata":{},"sourceType":"module"}