{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Components/UI/Card\";\nimport AddUser from \"./Components/User/AddUser\";\nimport SearchUserList from \"./Components/User/SearchUserList\";\nimport classes from \"./Components/User/AddUser.module.css\";\nimport useFetch from \"./Components/CustomHooks/useFetch\";\nimport { useHistory } from \"react-router\";\nimport Chart from \"./Chart/Chart\";\nimport ShowWithAnimation from \"./Components/CustomHooks/ShowWithDelay\";\nimport heroimage from \"./Images/Business_SVG.svg\";\nimport SearchUserListEditable from \"./Components/User/SearchUserListEditable\";\n\nconst Home = props => {\n  _s();\n\n  const history = useHistory();\n  const [status, setStatus] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const url = \"http://localhost:8000/AllUsers\";\n  const {\n    data: usersList,\n    isPending,\n    error\n  } = useFetch(url);\n  const [isMounted, setIsMounted] = useState(false); ///////////////////just for trigger the Props.isChanging from AddUser Component too on App Component///////////\n\n  const keyForRefetch = () => {\n    props.isChanging(status);\n  };\n\n  useEffect(() => {\n    setIsMounted(!isMounted);\n  }, [props.showNewUser]);\n\n  const deleteHandler = id => {\n    fetch(url + \"/\" + id, {\n      method: \"DELETE\"\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      setStatus(\"Delete successful\");\n      props.isChanging(status); /////////////just for tiger this prop on App Component\n    }).catch(error => {\n      setErrorMessage(error);\n      console.error(\"There was an error!\", errorMessage);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex_container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex_item_left,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: heroimage,\n    alt: \"Cross-CUT MAXimizer Image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flex_item_right,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: `${classes.input} ${classes.hero}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ShowWithAnimation, {\n    isMounted: !isMounted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, usersList && /*#__PURE__*/React.createElement(Chart, {\n    data: usersList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(ShowWithAnimation, {\n    isMounted: isMounted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddUser, {\n    onClick: keyForRefetch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }))))), error && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, error)), isPending && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"... Loading\")), usersList && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchUserList, {\n    Users: usersList,\n    Ondelete: deleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SearchUserListEditable, {\n    Users: usersList,\n    Ondelete: deleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(Home, \"bwHaHQiC70OaSnOdTCugPmQrRm8=\", false, function () {\n  return [useHistory, useFetch];\n});\n\n_c = Home;\nexport default Home; //npx json-server --watch Post/db.json --port 8000\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Home.js"],"names":["React","useEffect","useState","Card","AddUser","SearchUserList","classes","useFetch","useHistory","Chart","ShowWithAnimation","SearchUserListEditable","Home","props","history","status","setStatus","errorMessage","setErrorMessage","url","data","usersList","isPending","error","isMounted","setIsMounted","keyForRefetch","isChanging","showNewUser","deleteHandler","id","fetch","method","then","response","json","ok","message","Promise","reject","catch","console","flex_container","flex_item_left","heroimage","flex_item_right","input","hero"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Components/UI/Card\";\r\nimport AddUser from \"./Components/User/AddUser\";\r\nimport SearchUserList from \"./Components/User/SearchUserList\";\r\nimport classes from \"./Components/User/AddUser.module.css\";\r\nimport useFetch from \"./Components/CustomHooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\nimport Chart from \"./Chart/Chart\";\r\nimport ShowWithAnimation from \"./Components/CustomHooks/ShowWithDelay\";\r\nimport heroimage from \"./Images/Business_SVG.svg\";\r\nimport SearchUserListEditable from \"./Components/User/SearchUserListEditable\";\r\n\r\n\r\nconst Home = (props) => {\r\n  const history = useHistory();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const url = \"http://localhost:8000/AllUsers\";\r\n  const { data: usersList, isPending, error } = useFetch(url);\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  ///////////////////just for trigger the Props.isChanging from AddUser Component too on App Component///////////\r\n  const keyForRefetch = () => {\r\n    props.isChanging(status);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsMounted(!isMounted);\r\n  }, [props.showNewUser]);\r\n\r\n  const deleteHandler = (id) => {\r\n    fetch(url + \"/\" + id, { method: \"DELETE\" })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setStatus(\"Delete successful\");\r\n        props.isChanging(status); /////////////just for tiger this prop on App Component\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(error);\r\n        console.error(\"There was an error!\", errorMessage);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* ////////////////////////change with Animation//////////////// */}\r\n\r\n      <div className={classes.flex_container}>\r\n        <div className={classes.flex_item_left}>\r\n          <img src={heroimage} alt=\"Cross-CUT MAXimizer Image\" />\r\n        </div>\r\n        <div className={classes.flex_item_right}>\r\n          <Card className={`${classes.input} ${classes.hero}`}>\r\n            {/* <button onClick={() => setIsMounted(!isMounted)}>Show/Hide</button> */}\r\n            <ShowWithAnimation isMounted={!isMounted}>\r\n              {usersList && <Chart data={usersList} />}\r\n            </ShowWithAnimation>\r\n            <ShowWithAnimation isMounted={isMounted}>\r\n              <AddUser onClick={keyForRefetch} />\r\n            </ShowWithAnimation>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      {/* ////////////////////////change without Animation//////////////// */}\r\n      {/* {!props.showNewUser && usersList ? (\r\n        <Chart data={usersList} />\r\n      ) : (\r\n        <AddUser onClick={keyForRefetch} />\r\n      )} */}\r\n\r\n      {error && (\r\n        <Card className={classes.input}>\r\n          <h2>{error}</h2>\r\n        </Card>\r\n      )}\r\n      {isPending && (\r\n        <Card className={classes.input}>\r\n          <h2>... Loading</h2>\r\n        </Card>\r\n      )}\r\n      {usersList && (\r\n        <div>\r\n          <SearchUserList Users={usersList} Ondelete={deleteHandler} />\r\n          <SearchUserListEditable Users={usersList} Ondelete={deleteHandler} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n//npx json-server --watch Post/db.json --port 8000\r\n"]},"metadata":{},"sourceType":"module"}