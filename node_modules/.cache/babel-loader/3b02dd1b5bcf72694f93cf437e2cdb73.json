{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"./Components/UI/Card\";\nimport AddUser from \"./Components/User/AddUser\";\nimport SearchUserList from \"./Components/User/SearchUserList\";\nimport classes from \"./Components/User/AddUser.module.css\";\nimport useFetch from \"./Components/CustomHooks/useFetch\";\nimport { useHistory } from \"react-router\"; // import UserList from \"./Components/User/UserList\";\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\n\nfunction Home(props) {\n  _s();\n\n  const history = useHistory(); // const [status, setStatus] = useState(\"false\");\n  // const [isAdded, setIsAdded] = useState(false);\n  // useEffect(() => {\n  //   console.log(\"home use effect run\");\n  //   setUsersDelete(false);\n  // }, [usersDelete, isAdded]);\n\n  const {\n    data: usersList,\n    isPending,\n    error\n  } = useFetch(\"http://localhost:8000/AllUsers\");\n\n  const deleteHandler = id => {\n    // fetch(\"http://localhost:8000/AllUsers/\" + id, {\n    //   method: \"DELETE\",\n    // }).then(() => {\n    //   props.isChanging();\n    // });\n    // console.log(\"Home delete click\");\n    fetch(\"http://localhost:8000/AllUsers/\" + id, {\n      method: 'DELETE'\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      setStatus('Delete successful');\n    }).catch(error => {\n      setErrorMessage(error);\n      console.error('There was an error!', error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, props.showNewUser ? /*#__PURE__*/React.createElement(AddUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 42\n    }\n  }), error && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, error)), isPending && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"... Loading\")), usersList && /*#__PURE__*/React.createElement(SearchUserList, {\n    Users: usersList,\n    Ondelete: deleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(Home, \"GZNRXbWdXSTtIS1TB97qUGGe9t0=\", false, function () {\n  return [useHistory, useFetch];\n});\n\n_c = Home;\nexport default Home; //npx json-server --watch Post/db.json --port 8000\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Home.js"],"names":["React","useState","Card","AddUser","SearchUserList","classes","useFetch","useHistory","Home","props","history","data","usersList","isPending","error","deleteHandler","id","fetch","method","then","response","json","ok","message","status","Promise","reject","setStatus","catch","setErrorMessage","console","showNewUser","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;AACA;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB,QAAMC,OAAO,GAAGH,UAAU,EAA1B,CADmB,CAGnB;AACA;AAEA;AACA;AACA;AACA;;AAEA,QAAM;AACJI,IAAAA,IAAI,EAAEC,SADF;AAEJC,IAAAA,SAFI;AAGJC,IAAAA;AAHI,MAIFR,QAAQ,CAAC,gCAAD,CAJZ;;AAMA,QAAMS,aAAa,GAAIC,EAAD,IAAQ;AAE5B;AACA;AACA;AAEA;AACA;AACA;AACAC,IAAAA,KAAK,CAAC,oCAAoCD,EAArC,EAAyC;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAzC,CAAL,CACCC,IADD,CACM,MAAMC,QAAN,IAAkB;AACpB,YAAMT,IAAI,GAAG,MAAMS,QAAQ,CAACC,IAAT,EAAnB,CADoB,CAGpB;;AACA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACd;AACA,cAAMR,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACY,OAAd,IAA0BH,QAAQ,CAACI,MAAjD;AACA,eAAOC,OAAO,CAACC,MAAR,CAAeZ,KAAf,CAAP;AACH;;AAEDa,MAAAA,SAAS,CAAC,mBAAD,CAAT;AACH,KAZD,EAaCC,KAbD,CAaOd,KAAK,IAAI;AACZe,MAAAA,eAAe,CAACf,KAAD,CAAf;AACAgB,MAAAA,OAAO,CAAChB,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH,KAhBD;AAkBD,GA3BD;;AA6BA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACsB,WAAN,gBAAoB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApB,gBAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,EAGGjB,KAAK,iBACJ,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAET,OAAO,CAAC2B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,KAAL,CADF,CAJJ,EAQGD,SAAS,iBACR,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAER,OAAO,CAAC2B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CATJ,EAaGpB,SAAS,iBACR,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA,SAAvB;AAAkC,IAAA,QAAQ,EAAEG,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,CADF;AAoBD;;GAlEQP,I;UACSD,U,EAcZD,Q;;;KAfGE,I;AAoET,eAAeA,IAAf,C,CAEA","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"./Components/UI/Card\";\r\nimport AddUser from \"./Components/User/AddUser\";\r\nimport SearchUserList from \"./Components/User/SearchUserList\";\r\nimport classes from \"./Components/User/AddUser.module.css\";\r\nimport useFetch from \"./Components/CustomHooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n// import UserList from \"./Components/User/UserList\";\r\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\r\n\r\nfunction Home(props) {\r\n  const history = useHistory();\r\n\r\n  // const [status, setStatus] = useState(\"false\");\r\n  // const [isAdded, setIsAdded] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"home use effect run\");\r\n  //   setUsersDelete(false);\r\n  // }, [usersDelete, isAdded]);\r\n\r\n  const {\r\n    data: usersList,\r\n    isPending,\r\n    error,\r\n  } = useFetch(\"http://localhost:8000/AllUsers\");\r\n\r\n  const deleteHandler = (id) => {\r\n\r\n    // fetch(\"http://localhost:8000/AllUsers/\" + id, {\r\n    //   method: \"DELETE\",\r\n    // }).then(() => {\r\n     \r\n    //   props.isChanging();\r\n    // });\r\n    // console.log(\"Home delete click\");\r\n    fetch(\"http://localhost:8000/AllUsers/\" + id, { method: 'DELETE' })\r\n    .then(async response => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n            // get error message from body or default to response status\r\n            const error = (data && data.message) || response.status;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        setStatus('Delete successful');\r\n    })\r\n    .catch(error => {\r\n        setErrorMessage(error);\r\n        console.error('There was an error!', error);\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.showNewUser ? <AddUser /> : <h2></h2>}\r\n\r\n      {error && (\r\n        <Card className={classes.input}>\r\n          <h2>{error}</h2>\r\n        </Card>\r\n      )}\r\n      {isPending && (\r\n        <Card className={classes.input}>\r\n          <h2>... Loading</h2>\r\n        </Card>\r\n      )}\r\n      {usersList && (\r\n        <SearchUserList Users={usersList} Ondelete={deleteHandler} />\r\n      )}\r\n      {/* {usersList && <UserList Users={usersList} Ondelete={deleteHandler} />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n//npx json-server --watch Post/db.json --port 8000\r\n"]},"metadata":{},"sourceType":"module"}