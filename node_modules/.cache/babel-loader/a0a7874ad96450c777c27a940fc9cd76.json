{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\n\nconst useRobohash = () => {\n  _s();\n\n  const [myRoboImg, setMyRoboImg] = useState('');\n  useEffect(() => {\n    fetch(\"https://robohash.p.rapidapi.com/index.php?text=mashape\", {\n      method: \"GET\",\n      headers: {\n        \"x-rapidapi-host\": \"robohash.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"undefined\"\n      }\n    }).then(response => {\n      console.log(response);\n      setMyRoboImg(response);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  return myRoboImg;\n};\n\n_s(useRobohash, \"h1Hqc3NiYVQ2e85LD/rkZPwiAF0=\");\n\nexport default useRobohash;","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Components/CustomHooks/useRobohash.js"],"names":["React","useEffect","useState","useRobohash","myRoboImg","setMyRoboImg","fetch","method","headers","then","response","console","log","catch","err","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAChBK,IAAAA,KAAK,CAAC,wDAAD,EAA2D;AAC9DC,MAAAA,MAAM,EAAE,KADsD;AAE9DC,MAAAA,OAAO,EAAE;AACP,2BAAmB,yBADZ;AAEP,0BAAkB;AAFX;AAFqD,KAA3D,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAL,MAAAA,YAAY,CAACK,QAAD,CAAZ;AACD,KAVH,EAWGG,KAXH,CAWUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACI,KAAR,CAAcD,GAAd;AACD,KAbH;AAcD,GAfY,EAeX,EAfW,CAAT;AAgBF,SAAOV,SAAP;AACG,CApBL;;GAAMD,W;;AAqBN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst useRobohash = () => {\r\n    const [myRoboImg, setMyRoboImg] = useState('');\r\n    \r\n    useEffect(()=>{\r\n  fetch(\"https://robohash.p.rapidapi.com/index.php?text=mashape\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"x-rapidapi-host\": \"robohash.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": \"undefined\",\r\n    },\r\n  })\r\n    .then((response) => {\r\n      console.log(response);\r\n      setMyRoboImg(response);\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n},[])\r\n  return myRoboImg;\r\n    };\r\nexport default useRobohash;\r\n"]},"metadata":{},"sourceType":"module"}