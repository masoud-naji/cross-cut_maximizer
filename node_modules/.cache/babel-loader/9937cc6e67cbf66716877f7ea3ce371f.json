{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Components/UI/Card\";\nimport AddUser from \"./Components/User/AddUser\";\nimport SearchUserList from \"./Components/User/SearchUserList\";\nimport classes from \"./Components/User/AddUser.module.css\";\nimport useFetch from \"./Components/CustomHooks/useFetch\";\nimport { useHistory } from \"react-router\";\nimport Chart from \"./Chart/Chart\";\nimport ShowWithAnimation from \"./Components/CustomHooks/ShowWithDelay\"; // import UserList from \"./Components/User/UserList\";\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\n\nconst Home = props => {\n  _s();\n\n  const history = useHistory();\n  const [status, setStatus] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const url = \"http://localhost:8000/AllUsers\";\n  const {\n    data: usersList,\n    isPending,\n    error\n  } = useFetch(url);\n  const [isMounted, setIsMounted] = useState(false); ///////////////////just for trigger the Props.isChanging from AddUser Component too on App Component///////////\n\n  const keyForRefetch = () => {\n    props.isChanging(status);\n  };\n\n  const deleteHandler = id => {\n    fetch(url + \"/\" + id, {\n      method: \"DELETE\"\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      setStatus(\"Delete successful\");\n      props.isChanging(status); /////////////just for tiger this prop on App Component\n    }).catch(error => {\n      setErrorMessage(error);\n      console.error(\"There was an error!\", errorMessage);\n    });\n  }; // props.showNewUser ? setIsMounted(!isMounted) :\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: `${classes.input} ${classes.hero}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setIsMounted(!isMounted),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Show/Hide\"), /*#__PURE__*/React.createElement(ShowWithAnimation, {\n    isMounted: !isMounted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, usersList && /*#__PURE__*/React.createElement(Chart, {\n    data: usersList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(ShowWithAnimation, {\n    isMounted: isMounted,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddUser, {\n    onClick: keyForRefetch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }))), error && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, error)), isPending && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"... Loading\")), usersList && /*#__PURE__*/React.createElement(SearchUserList, {\n    Users: usersList,\n    Ondelete: deleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }));\n};\n\n_s(Home, \"+lu7mhv9ZBvbtAt32w0+pHR1Uvc=\", false, function () {\n  return [useHistory, useFetch];\n});\n\n_c = Home;\nexport default Home; //npx json-server --watch Post/db.json --port 8000\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Home.js"],"names":["React","useEffect","useState","Card","AddUser","SearchUserList","classes","useFetch","useHistory","Chart","ShowWithAnimation","Home","props","history","status","setStatus","errorMessage","setErrorMessage","url","data","usersList","isPending","error","isMounted","setIsMounted","keyForRefetch","isChanging","deleteHandler","id","fetch","method","then","response","json","ok","message","Promise","reject","catch","console","input","hero"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Components/UI/Card\";\r\nimport AddUser from \"./Components/User/AddUser\";\r\nimport SearchUserList from \"./Components/User/SearchUserList\";\r\nimport classes from \"./Components/User/AddUser.module.css\";\r\nimport useFetch from \"./Components/CustomHooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\nimport Chart from \"./Chart/Chart\";\r\nimport ShowWithAnimation from \"./Components/CustomHooks/ShowWithDelay\";\r\n\r\n// import UserList from \"./Components/User/UserList\";\r\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\r\n\r\nconst Home = (props) => {\r\n  const history = useHistory();\r\n  const [status, setStatus] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const url = \"http://localhost:8000/AllUsers\";\r\n  const { data: usersList, isPending, error } = useFetch(url);\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  ///////////////////just for trigger the Props.isChanging from AddUser Component too on App Component///////////\r\n  const keyForRefetch = () => {\r\n    props.isChanging(status);\r\n  };\r\n\r\n  const deleteHandler = (id) => {\r\n    fetch(url + \"/\" + id, { method: \"DELETE\" })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setStatus(\"Delete successful\");\r\n        props.isChanging(status); /////////////just for tiger this prop on App Component\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(error);\r\n        console.error(\"There was an error!\", errorMessage);\r\n      });\r\n  };\r\n// props.showNewUser ? setIsMounted(!isMounted) :\r\n  return (\r\n    <div>\r\n      {/* {props.showNewUser ? <AddUser onClick={keyForRefetch}/> : <h2></h2>} */}\r\n      \r\n      \r\n      <Card className={`${classes.input} ${classes.hero}`}>\r\n        <button onClick={() => setIsMounted(!isMounted)}>Show/Hide</button>\r\n        <ShowWithAnimation isMounted={!isMounted}>\r\n          {usersList && <Chart data={usersList} />}\r\n        </ShowWithAnimation>\r\n        <ShowWithAnimation isMounted={isMounted}>\r\n          <AddUser onClick={keyForRefetch} />\r\n        </ShowWithAnimation>\r\n      </Card>\r\n\r\n      {/* {!props.showNewUser && usersList ? (\r\n        <Chart data={usersList} />\r\n      ) : (\r\n        <AddUser onClick={keyForRefetch} />\r\n      )} */}\r\n\r\n      {error && (\r\n        <Card className={classes.input}>\r\n          <h2>{error}</h2>\r\n        </Card>\r\n      )}\r\n      {isPending && (\r\n        <Card className={classes.input}>\r\n          <h2>... Loading</h2>\r\n        </Card>\r\n      )}\r\n      {usersList && (\r\n        <SearchUserList Users={usersList} Ondelete={deleteHandler} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n//npx json-server --watch Post/db.json --port 8000\r\n"]},"metadata":{},"sourceType":"module"}