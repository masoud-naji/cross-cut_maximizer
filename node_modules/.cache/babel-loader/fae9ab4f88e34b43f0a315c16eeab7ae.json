{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Components\\\\User\\\\SearchUserListEditable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import UserData from \"../Post/MOCK_DATA.json\";\n\nimport style from \"./UsersList.module.css\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport { Fragment } from \"react\";\nimport ReadOnlyRow from \"./UserEdit/ReadOnlyRow\";\nimport EditableOnlyRow from \"./UserEdit/EditableRow\";\n\nfunction SearchUserListEditable(props) {\n  _s();\n\n  const [isPending, setIsPending] = useState(false);\n  const [isediting, setIsediting] = useState();\n  const [name, setName] = useState(\"\");\n  const [foundUsers, setFoundUsers] = useState(props.Users);\n  const [rowEditing, setRowEditing] = useState(null);\n  const [editFormData, setEditFormData] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    time: \"\",\n    email: \"\",\n    Job: \"\",\n    DateOfBirthat: \"\",\n    donate: \"\"\n  });\n\n  const editFormChangeHandler = event => {\n    const filedName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[filedName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const editFormHandler = editFormData => {\n    setRowEditing(editFormData.id);\n    const formValues = {\n      first_name: editFormData.first_name,\n      last_name: editFormData.last_name,\n      time: editFormData.time,\n      email: editFormData.email,\n      Job: editFormData.Job,\n      DateOfBirthat: editFormData.DateOfBirth,\n      donate: editFormData.donate\n    };\n    setEditFormData(formValues);\n  };\n\n  const editFormSubmit = (event, user) => {\n    event.preventDefault();\n    setIsPending(true);\n    const editUser = {\n      id: rowEditing.id,\n      first_name: editFormData.first_name,\n      last_name: editFormData.last_name,\n      time: editFormData.time,\n      email: editFormData.email,\n      Job: editFormData.Job,\n      DateOfBirthat: editFormData.DateOfBirth,\n      donate: editFormData.donate\n    };\n    console.log(e);\n    fetch(\"http://localhost:8000/AllUsers\", {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(editUser)\n    }).then(() => {\n      setIsPending(false);\n    });\n  }; // search by filter\n\n\n  const filter = event => {\n    const keyword = event.target.value;\n\n    if (keyword !== \"\") {\n      const results = props.Users.filter(user => {\n        return user.first_name.toLowerCase().startsWith(keyword.toLowerCase()); // Use the toLowerCase() method to make it case-insensitive\n      });\n      setFoundUsers(results);\n    } else {\n      setFoundUsers(props.Users); // If the text field is empty, show all users\n    }\n\n    setName(keyword);\n  }; // toggle edit table\n\n\n  const enableEdit = () => {\n    setIsediting(true);\n  };\n\n  const disableEdit = () => {\n    setIsediting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: style.users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: style.tableContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, foundUsers && /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, \"Currently Table Contain \", foundUsers.length, \" Records\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    value: name,\n    id: style.myInput,\n    onChange: filter,\n    placeholder: \"Search for names..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: editFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: style.userTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Avator\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, \"JOB\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Birthday\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Donate\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, isediting ? /*#__PURE__*/React.createElement(Button, {\n    onClick: disableEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, \"Done\") : /*#__PURE__*/React.createElement(Button, {\n    onClick: enableEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }\n  }, \"Edit\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, foundUsers && foundUsers.length > 0 ? foundUsers.map(user => rowEditing === user.id ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(EditableOnlyRow, {\n    user: user,\n    isediting: isediting,\n    Ondelete: props.Ondelete,\n    editFormData: editFormData,\n    editFormChangeHandler: editFormChangeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(ReadOnlyRow, {\n    user: user,\n    isediting: isediting,\n    rowEditing: editFormHandler,\n    Ondelete: props.Ondelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"No results found!\"), \";\")))));\n}\n\n_s(SearchUserListEditable, \"NtYNtktZWv80IRo1CQwciakmx+Q=\");\n\n_c = SearchUserListEditable;\nexport default SearchUserListEditable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchUserListEditable\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Components/User/SearchUserListEditable.jsx"],"names":["React","useEffect","useState","style","Card","Button","Fragment","ReadOnlyRow","EditableOnlyRow","SearchUserListEditable","props","isPending","setIsPending","isediting","setIsediting","name","setName","foundUsers","setFoundUsers","Users","rowEditing","setRowEditing","editFormData","setEditFormData","first_name","last_name","time","email","Job","DateOfBirthat","donate","editFormChangeHandler","event","filedName","target","getAttribute","fieldValue","value","newFormData","editFormHandler","id","formValues","DateOfBirth","editFormSubmit","user","preventDefault","editUser","console","log","e","fetch","method","headers","body","JSON","stringify","then","filter","keyword","results","toLowerCase","startsWith","enableEdit","disableEdit","users","tableContainer","length","myInput","userTable","map","Ondelete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import UserData from \"../Post/MOCK_DATA.json\";\r\nimport style from \"./UsersList.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\nimport { Fragment } from \"react\";\r\nimport ReadOnlyRow from \"./UserEdit/ReadOnlyRow\";\r\nimport EditableOnlyRow from \"./UserEdit/EditableRow\";\r\n\r\nfunction SearchUserListEditable(props) {\r\n  const [isPending, setIsPending] = useState(false);\r\n  const [isediting, setIsediting] = useState();\r\n  const [name, setName] = useState(\"\");\r\n  const [foundUsers, setFoundUsers] = useState(props.Users);\r\n  const [rowEditing, setRowEditing] = useState(null);\r\n\r\n  const [editFormData, setEditFormData] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    time: \"\",\r\n    email: \"\",\r\n    Job: \"\",\r\n    DateOfBirthat: \"\",\r\n    donate: \"\",\r\n  });\r\n\r\n  const editFormChangeHandler = (event) => {\r\n    const filedName = event.target.getAttribute(\"name\");\r\n    const fieldValue = event.target.value;\r\n\r\n    const newFormData = { ...editFormData };\r\n    newFormData[filedName] = fieldValue;\r\n    setEditFormData(newFormData);\r\n  };\r\n\r\n  const editFormHandler = (editFormData) => {\r\n    setRowEditing(editFormData.id);\r\n\r\n    const formValues = {\r\n      first_name: editFormData.first_name,\r\n      last_name: editFormData.last_name,\r\n      time: editFormData.time,\r\n      email: editFormData.email,\r\n      Job: editFormData.Job,\r\n      DateOfBirthat: editFormData.DateOfBirth,\r\n      donate: editFormData.donate,\r\n    };\r\n    setEditFormData(formValues);\r\n  };\r\n\r\n\r\n  const editFormSubmit = (event,user) => {\r\n    event.preventDefault();\r\n    setIsPending(true);\r\n\r\n    const editUser = {\r\n      id:rowEditing.id,\r\n      first_name: editFormData.first_name,\r\n      last_name: editFormData.last_name,\r\n      time: editFormData.time,\r\n      email: editFormData.email,\r\n      Job: editFormData.Job,\r\n      DateOfBirthat: editFormData.DateOfBirth,\r\n      donate: editFormData.donate,\r\n    };\r\n\r\n    console.log(e)\r\n    fetch(\"http://localhost:8000/AllUsers\", {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(editUser),\r\n    }).then(() => {\r\n      setIsPending(false);\r\n    });\r\n  };\r\n  // search by filter\r\n  const filter = (event) => {\r\n    const keyword = event.target.value;\r\n\r\n    if (keyword !== \"\") {\r\n      const results = props.Users.filter((user) => {\r\n        return user.first_name.toLowerCase().startsWith(keyword.toLowerCase());\r\n        // Use the toLowerCase() method to make it case-insensitive\r\n      });\r\n      setFoundUsers(results);\r\n    } else {\r\n      setFoundUsers(props.Users);\r\n      // If the text field is empty, show all users\r\n    }\r\n    setName(keyword);\r\n  };\r\n\r\n  // toggle edit table\r\n  const enableEdit = () => {\r\n    setIsediting(true);\r\n  };\r\n  const disableEdit = () => {\r\n    setIsediting(false);\r\n  };\r\n\r\n  return (\r\n    <Card className={style.users}>\r\n      <div className={style.tableContainer}>\r\n        {foundUsers && (\r\n          <h3>\r\n            Currently Table Contain {foundUsers.length} Records\r\n            {/* <br /> Total Selected Debt is {getFormattedPrice(total)} */}\r\n          </h3>\r\n        )}\r\n        <input\r\n          type=\"search\"\r\n          value={name}\r\n          id={style.myInput}\r\n          onChange={filter}\r\n          placeholder=\"Search for names..\"\r\n        />\r\n        <form onSubmit={editFormSubmit}>\r\n        <table className={style.userTable}>\r\n          <thead>\r\n            <tr>\r\n              <th>Avator</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Time</th>\r\n              <th>Email</th>\r\n              <th>JOB</th>\r\n              <th>Birthday</th>\r\n              <th>Donate</th>\r\n              <th>\r\n                {isediting ? (\r\n                  <Button onClick={disableEdit}>Done</Button>\r\n                ) : (\r\n                  <Button onClick={enableEdit}>Edit</Button>\r\n                )}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {foundUsers && foundUsers.length > 0 ? (\r\n              foundUsers.map((user) =>\r\n                rowEditing === user.id ? (\r\n                  <Fragment>\r\n                    <EditableOnlyRow\r\n                      user={user}\r\n                      isediting={isediting}\r\n                      Ondelete={props.Ondelete}\r\n                      editFormData={editFormData}\r\n                      editFormChangeHandler={editFormChangeHandler}\r\n                      \r\n                    />\r\n                  </Fragment>\r\n                ) : (\r\n                  <Fragment>\r\n                    <ReadOnlyRow\r\n                      user={user}\r\n                      isediting={isediting}\r\n                      rowEditing={editFormHandler}\r\n                      Ondelete={props.Ondelete}\r\n                    />\r\n                  </Fragment>\r\n                )\r\n              )\r\n            ) : (\r\n              <h3>No results found!</h3>\r\n            )}\r\n            ;\r\n          </tbody>\r\n        </table>\r\n        </form>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default SearchUserListEditable;\r\n"]},"metadata":{},"sourceType":"module"}