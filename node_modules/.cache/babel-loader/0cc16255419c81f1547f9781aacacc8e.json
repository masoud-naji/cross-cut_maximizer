{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Components\\\\User\\\\SearchList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import UserData from \"../Post/MOCK_DATA.json\";\n\nimport style from \"./UsersList.module.css\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\n\nfunction SearchUserList(props) {\n  _s();\n\n  const [isediting, setIsediting] = useState();\n  const [name, setName] = useState(\"\");\n  const [foundUsers, setFoundUsers] = useState(props.Users);\n\n  const filter = event => {\n    const keyword = event.target.value;\n\n    if (keyword !== \"\") {\n      const results = props.Users.filter(user => {\n        return user.first_name.toLowerCase().startsWith(keyword.toLowerCase()); // Use the toLowerCase() method to make it case-insensitive\n      });\n      setFoundUsers(results);\n    } else {\n      setFoundUsers(); // If the text field is empty, show all users\n    }\n\n    setName(keyword);\n  };\n\n  const enableEdit = () => {\n    setIsediting(true);\n  };\n\n  const disableEdit = () => {\n    setIsediting(false);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: style.users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Currently Table Contain \", foundUsers.length, \" Records\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"search\",\n    value: name,\n    id: style.myInput,\n    onChange: filter,\n    placeholder: \"Search for names..\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    className: style.userTable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Last Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Gender\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Date Of Birth\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, isediting ? /*#__PURE__*/React.createElement(Button, {\n    onClick: disableEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"Done\") : /*#__PURE__*/React.createElement(Button, {\n    onClick: enableEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, \"Edit\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, foundUsers && foundUsers.length > 0 ? foundUsers.map(user => /*#__PURE__*/React.createElement(\"tr\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \" \", user.first_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }, \" \", user.last_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  }, \" \", user.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }\n  }, \" \", user.gender), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }\n  }, user.DateOfBirth), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, new Date().getFullYear() - new Date(user.DateOfBirth).getFullYear()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, isediting && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.Ondelete(user.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }\n  }, \"Delete\")))) : /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"No results found!\")))));\n}\n\n_s(SearchUserList, \"g2rcbQ58NmSKtOWXtc2FSChoTlk=\");\n\n_c = SearchUserList;\nexport default SearchUserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchUserList\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Components/User/SearchList.jsx"],"names":["React","useState","style","Card","Button","SearchUserList","props","isediting","setIsediting","name","setName","foundUsers","setFoundUsers","Users","filter","event","keyword","target","value","results","user","first_name","toLowerCase","startsWith","enableEdit","disableEdit","users","length","myInput","userTable","map","id","last_name","email","gender","DateOfBirth","Date","getFullYear","Ondelete"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n// import UserData from \"../Post/MOCK_DATA.json\";\r\nimport style from \"./UsersList.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport Button from \"../UI/Button\";\r\n\r\n\r\nfunction SearchUserList(props) {\r\n  const [isediting, setIsediting] = useState();\r\n  const [name, setName] = useState(\"\");\r\n  const [foundUsers, setFoundUsers] = useState(props.Users);\r\n\r\n  const filter = (event) => {\r\n    const keyword = event.target.value;\r\n\r\n    if (keyword !== \"\") {\r\n      const results = props.Users.filter((user) => {\r\n        return user.first_name.toLowerCase().startsWith(keyword.toLowerCase());\r\n        // Use the toLowerCase() method to make it case-insensitive\r\n      });\r\n      setFoundUsers(results);\r\n    } else {\r\n      setFoundUsers();\r\n      // If the text field is empty, show all users\r\n    }\r\n    setName(keyword);\r\n  };\r\n\r\n  const enableEdit = () => {\r\n    setIsediting(true);\r\n  };\r\n  const disableEdit = () => {\r\n    setIsediting(false);\r\n  };\r\n\r\n  return (\r\n    <Card className={style.users}>\r\n      <div>\r\n        <h3>Currently Table Contain {foundUsers.length} Records</h3>\r\n        <input\r\n          type=\"search\"\r\n          value={name}\r\n          id={style.myInput}\r\n          onChange={filter}\r\n          placeholder=\"Search for names..\"\r\n        />\r\n        <table className={style.userTable}>\r\n          <thead>\r\n            <tr>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Gender</th>\r\n              <th>Date Of Birth</th>\r\n              <th>Age</th>\r\n              <th>\r\n                {isediting ? (\r\n                  <Button onClick={disableEdit}>Done</Button>\r\n                ) : (\r\n                  <Button onClick={enableEdit}>Edit</Button>\r\n                )}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {foundUsers && foundUsers.length > 0 ? (\r\n              foundUsers.map((user) => (\r\n                <tr key={user.id}>\r\n                  <td> {user.first_name}</td>\r\n                  <td> {user.last_name}</td>\r\n                  <td> {user.email}</td>\r\n                  <td> {user.gender}</td>\r\n                  <td>{user.DateOfBirth}</td>\r\n                  <td>\r\n                    {new Date().getFullYear() -\r\n                      new Date(user.DateOfBirth).getFullYear()}\r\n                  </td>\r\n                  <td>\r\n                    {isediting && (\r\n                      <Button onClick={() => props.Ondelete(user.id)}>\r\n                        Delete\r\n                      </Button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <h1>No results found!</h1>\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default SearchUserList;\r\n"]},"metadata":{},"sourceType":"module"}