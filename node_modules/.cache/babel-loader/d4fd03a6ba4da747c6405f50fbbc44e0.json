{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Components\\\\User\\\\UserEdit\\\\ReadOnlyRow.jsx\";\nimport React from \"react\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport Button from \"../../UI/Button\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import\n\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\n\nconst ReadOnlyRow = ({\n  user,\n  isediting,\n  Ondelete\n}) => {\n  const submit = () => {\n    confirmAlert({\n      title: \"Confirm to submit\",\n      message: \"Are you sure to do this.\",\n      buttons: [{\n        label: \"Yes\",\n        onClick: () => alert(\"Click Yes\")\n      }, {\n        label: \"No\",\n        onClick: () => alert(\"Click No\")\n      }]\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: user.Avator,\n    alt: user.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \" \", user.first_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \" \", user.last_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \" \", user.time), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \" \", user.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \" \", user.Job), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, user.DateOfBirth), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, user.donate, \" $\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, isediting && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => Ondelete(user.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      alert(`${user.first_name}  \"Edit Button Clicked\"`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Edit\"))));\n};\n\n_c = ReadOnlyRow;\nexport default ReadOnlyRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadOnlyRow\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Components/User/UserEdit/ReadOnlyRow.jsx"],"names":["React","Fragment","Button","confirmAlert","ReadOnlyRow","user","isediting","Ondelete","submit","title","message","buttons","label","onClick","alert","id","Avator","name","first_name","last_name","time","email","Job","DateOfBirth","donate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,YAAT,QAA6B,qBAA7B,C,CAAoD;;AACpD,OAAO,iDAAP,C,CAA0D;;AAC1D,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA;AAAnB,CAAD,KAAmC;AACrD,QAAMC,MAAM,GAAG,MAAM;AACnBL,IAAAA,YAAY,CAAC;AACXM,MAAAA,KAAK,EAAE,mBADI;AAEXC,MAAAA,OAAO,EAAE,0BAFE;AAGXC,MAAAA,OAAO,EAAE,CACP;AACEC,QAAAA,KAAK,EAAE,KADT;AAEEC,QAAAA,OAAO,EAAE,MAAMC,KAAK,CAAC,WAAD;AAFtB,OADO,EAKP;AACEF,QAAAA,KAAK,EAAE,IADT;AAEEC,QAAAA,OAAO,EAAE,MAAMC,KAAK,CAAC,UAAD;AAFtB,OALO;AAHE,KAAD,CAAZ;AAcD,GAfD;;AAiBA,sBACE;AAAI,IAAA,GAAG,EAAET,IAAI,CAACU,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEV,IAAI,CAACW,MAAf;AAAuB,IAAA,GAAG,EAAEX,IAAI,CAACY,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMZ,IAAI,CAACa,UAAX,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMb,IAAI,CAACc,SAAX,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMd,IAAI,CAACe,IAAX,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMf,IAAI,CAACgB,KAAX,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMhB,IAAI,CAACiB,GAAX,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKjB,IAAI,CAACkB,WAAV,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,IAAI,CAACmB,MAAV,OAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,SAAS,iBACR,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMC,QAAQ,CAACF,IAAI,CAACU,EAAN,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbD,MAAAA,KAAK,CAAE,GAAET,IAAI,CAACa,UAAW,yBAApB,CAAL;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAFJ,CAXF,CADF;AA4BD,CA9CD;;KAAMd,W;AAgDN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\nimport { Fragment } from \"react/cjs/react.production.min\";\r\nimport Button from \"../../UI/Button\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nconst ReadOnlyRow = ({ user, isediting, Ondelete }) => {\r\n  const submit = () => {\r\n    confirmAlert({\r\n      title: \"Confirm to submit\",\r\n      message: \"Are you sure to do this.\",\r\n      buttons: [\r\n        {\r\n          label: \"Yes\",\r\n          onClick: () => alert(\"Click Yes\"),\r\n        },\r\n        {\r\n          label: \"No\",\r\n          onClick: () => alert(\"Click No\"),\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <tr key={user.id}>\r\n      <td>\r\n        <img src={user.Avator} alt={user.name}></img>\r\n      </td>\r\n      <td> {user.first_name}</td>\r\n      <td> {user.last_name}</td>\r\n      <td> {user.time}</td>\r\n      <td> {user.email}</td>\r\n      <td> {user.Job}</td>\r\n      <td>{user.DateOfBirth}</td>\r\n      <td>{user.donate} $</td>\r\n      <td>\r\n        {isediting && (\r\n          <Fragment>\r\n            <Button onClick={() => Ondelete(user.id)}>Delete</Button>\r\n            <Button\r\n              onClick={() => {\r\n                alert(`${user.first_name}  \"Edit Button Clicked\"`);\r\n              }}\r\n            >\r\n              Edit\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default ReadOnlyRow;\r\n"]},"metadata":{},"sourceType":"module"}