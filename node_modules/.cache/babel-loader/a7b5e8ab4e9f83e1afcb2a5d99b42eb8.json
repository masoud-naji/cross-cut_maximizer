{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Card from \"./Components/UI/Card\";\nimport AddUser from \"./Components/User/AddUser\";\nimport SearchUserList from \"./Components/User/SearchUserList\";\nimport classes from \"./Components/User/AddUser.module.css\";\nimport useFetch from \"./Components/CustomHooks/useFetch\";\nimport { useHistory } from \"react-router\"; // import UserList from \"./Components/User/UserList\";\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\n\nfunction Home(props) {\n  _s();\n\n  const history = useHistory();\n  const [status, setStatus] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showPopUp, setShowPopUP] = useState(false);\n  const url = \"http://localhost:8000/AllUsers\"; // const [usersList , setData] = useState(null);\n  // const [isPending, setIsPending] = useState(true);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortCont = new AbortController();\n    console.log(\"UseEefect home run\");\n    fetch(url, {\n      signal: abortCont.signal\n    }).then(res => {\n      if (!res.ok) {\n        // error coming back from server\n        throw Error(\"could not fetch the data for that resource\");\n      }\n\n      return res.json();\n    }).then(data => {\n      setIsPending(false);\n      setData(data);\n      setError(null);\n    }).catch(err => {\n      if (err.name === \"AbortError\") {\n        console.log(\"fetch aborted\");\n      } else {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      }\n    }); // abort the fetch\n\n    return () => abortCont.abort();\n  }, [url, status]);\n  const {\n    data: usersList,\n    isPending,\n    error\n  } = useFetch(url);\n\n  const deleteHandler = id => {\n    fetch(url + \"/\" + id, {\n      method: \"DELETE\"\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response status\n        const error = data && data.message || response.status;\n        return Promise.reject(error);\n      }\n\n      setStatus(\"Delete successful\");\n      props.isChanging(status);\n    }).catch(error => {\n      setErrorMessage(error);\n      console.error(\"There was an error!\", error);\n      this.setState({\n        state: this.state\n      });\n    });\n  };\n\n  const showPopUpfun = () => {\n    setShowPopUP(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, props.showNewUser ? /*#__PURE__*/React.createElement(AddUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 42\n    }\n  }), error && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, error)), isPending && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"... Loading\")), usersList && /*#__PURE__*/React.createElement(SearchUserList, {\n    Users: usersList,\n    Ondelete: deleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: showPopUpfun,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"PopUp\"));\n}\n\n_s(Home, \"jO6KTBIvGTP0n0JkuvBa483xrJ0=\", false, function () {\n  return [useHistory, useFetch];\n});\n\n_c = Home;\nexport default Home; //npx json-server --watch Post/db.json --port 8000\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Home.js"],"names":["React","useEffect","useState","Card","AddUser","SearchUserList","classes","useFetch","useHistory","Home","props","history","status","setStatus","errorMessage","setErrorMessage","showPopUp","setShowPopUP","url","abortCont","AbortController","console","log","fetch","signal","then","res","ok","Error","json","data","setIsPending","setData","setError","catch","err","name","message","abort","usersList","isPending","error","deleteHandler","id","method","response","Promise","reject","isChanging","setState","state","showPopUpfun","showNewUser","input"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Card from \"./Components/UI/Card\";\r\nimport AddUser from \"./Components/User/AddUser\";\r\nimport SearchUserList from \"./Components/User/SearchUserList\";\r\nimport classes from \"./Components/User/AddUser.module.css\";\r\nimport useFetch from \"./Components/CustomHooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n// import UserList from \"./Components/User/UserList\";\r\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\r\n\r\nfunction Home(props) {\r\n  const history = useHistory();\r\n\r\n  const [status, setStatus] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [showPopUp, setShowPopUP] = useState(false);\r\n  const url = \"http://localhost:8000/AllUsers\";\r\n\r\n  // const [usersList , setData] = useState(null);\r\n  // const [isPending, setIsPending] = useState(true);\r\n  // const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n    console.log(\"UseEefect home run\");\r\n    fetch(url, { signal: abortCont.signal })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          // error coming back from server\r\n          throw Error(\"could not fetch the data for that resource\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"fetch aborted\");\r\n        } else {\r\n          // auto catches network / connection error\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n      });\r\n\r\n    // abort the fetch\r\n    return () => abortCont.abort();\r\n  }, [url ,status]);\r\n\r\n  const { data: usersList, isPending, error } = useFetch(url);\r\n\r\n  const deleteHandler = (id) => {\r\n    fetch(url + \"/\" + id, { method: \"DELETE\" })\r\n      .then(async (response) => {\r\n        const data = await response.json();\r\n\r\n        // check for error response\r\n        if (!response.ok) {\r\n          // get error message from body or default to response status\r\n          const error = (data && data.message) || response.status;\r\n          return Promise.reject(error);\r\n        }\r\n\r\n        setStatus(\"Delete successful\");\r\n        props.isChanging(status);\r\n      })\r\n      .catch((error) => {\r\n        setErrorMessage(error);\r\n        console.error(\"There was an error!\", error);\r\n        this.setState({ state: this.state });\r\n      });\r\n  };\r\n\r\n\r\n  const showPopUpfun = () => {\r\n    setShowPopUP(true);\r\n}\r\n\r\n  return (\r\n    <div>\r\n      {props.showNewUser ? <AddUser /> : <h2></h2>}\r\n\r\n      {error && (\r\n        <Card className={classes.input}>\r\n          <h2>{error}</h2>\r\n        </Card>\r\n      )}\r\n      {isPending && (\r\n        <Card className={classes.input}>\r\n          <h2>... Loading</h2>\r\n        </Card>\r\n      )}\r\n      {usersList && (\r\n        <SearchUserList Users={usersList} Ondelete={deleteHandler} />\r\n      )}\r\n      {/* {usersList && <UserList Users={usersList} Ondelete={deleteHandler} />} */}\r\n      <button onClick={showPopUpfun}>PopUp</button>\r\n      {/* {showPopUp && <SearchUserList Users={usersList} Ondelete={deleteHandler} />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n//npx json-server --watch Post/db.json --port 8000\r\n"]},"metadata":{},"sourceType":"module"}