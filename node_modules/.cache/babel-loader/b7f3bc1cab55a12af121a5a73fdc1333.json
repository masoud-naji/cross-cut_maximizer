{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\practic\\\\testmuknowladge\\\\src\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"./Components/UI/Card\";\nimport AddUser from \"./Components/User/AddUser\";\nimport SearchUserList from \"./Components/User/SearchUserList\";\nimport classes from \"./Components/User/AddUser.module.css\";\nimport useFetch from \"./Components/CustomHooks/useFetch\";\nimport { useHistory } from \"react-router\";\nimport MyAvator from \"./Components/CustomHooks/MyAvator\"; // import UserList from \"./Components/User/UserList\";\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\n\nfunction Home(props) {\n  _s();\n\n  // const [usersList, setUsersList] = useState(UserData);\n  const history = useHistory();\n  const [isAdded, setIsAdded] = useState(false);\n  const {\n    data: usersList,\n    isPending,\n    error\n  } = useFetch(\"http://localhost:8000/AllUsers\");\n  const first_name = \"Masoud\";\n  const last_name = \"Naji\";\n  const Avatar = MyAvator(`${first_name.charAt(0)}${last_name.charAt(0)}`, `\"#\" + ${Math.floor(Math.random() * 16777215).toString(16)}`, `\"#\" + ${Math.floor(Math.random() * 16777215).toString(16)}`);\n\n  const deleteHandler = id => {\n    // const newUserslist = usersList.filter((userlist) => userlist.id !== id);\n    // setData(newUserslist);\n    fetch(\"http://localhost:8000/AllUsers/\" + id, {\n      method: \"DELETE\"\n    }).then(() => {\n      history.push(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, props.showNewUser ? /*#__PURE__*/React.createElement(AddUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"avatar\",\n    alt: \"Avatar\",\n    src: Avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })), error && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, error)), isPending && /*#__PURE__*/React.createElement(Card, {\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"... Loading\")), usersList && /*#__PURE__*/React.createElement(SearchUserList, {\n    Users: usersList,\n    Ondelete: deleteHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }));\n}\n\n_s(Home, \"Y71I0oR2p5TmbS6CgLnGIbipH50=\", false, function () {\n  return [useHistory, useFetch];\n});\n\n_c = Home;\nexport default Home; //npx json-server --watch Post/db.json --port 8000\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["D:/Project/React/practic/testmuknowladge/src/Home.js"],"names":["React","useState","Card","AddUser","SearchUserList","classes","useFetch","useHistory","MyAvator","Home","props","history","isAdded","setIsAdded","data","usersList","isPending","error","first_name","last_name","Avatar","charAt","Math","floor","random","toString","deleteHandler","id","fetch","method","then","push","showNewUser","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,QAAP,MAAqB,mCAArB,C,CAEA;AACA;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACnB;AAEA,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM;AACJa,IAAAA,IAAI,EAAEC,SADF;AAEJC,IAAAA,SAFI;AAGJC,IAAAA;AAHI,MAIFX,QAAQ,CAAC,gCAAD,CAJZ;AAMA,QAAMY,UAAU,GAAG,QAAnB;AACA,QAAMC,SAAS,GAAG,MAAlB;AACA,QAAMC,MAAM,GAAGZ,QAAQ,CACpB,GAAEU,UAAU,CAACG,MAAX,CAAkB,CAAlB,CAAqB,GAAEF,SAAS,CAACE,MAAV,CAAiB,CAAjB,CAAoB,EADzB,EAEpB,SAAQC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAFtC,EAGpB,SAAQH,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAHtC,CAAvB;;AAMA,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5B;AACA;AACAC,IAAAA,KAAK,CAAC,oCAAoCD,EAArC,EAAyC;AAC5CE,MAAAA,MAAM,EAAE;AADoC,KAAzC,CAAL,CAEGC,IAFH,CAEQ,MAAM;AACZnB,MAAAA,OAAO,CAACoB,IAAR,CAAa,GAAb;AACD,KAJD;AAKD,GARD;;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,KAAK,CAACsB,WAAN,gBACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAiB,IAAA,GAAG,EAAC,QAArB;AAA8B,IAAA,GAAG,EAAEZ,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJJ,EASGH,KAAK,iBACJ,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEZ,OAAO,CAAC4B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,KAAL,CADF,CAVJ,EAcGD,SAAS,iBACR,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEX,OAAO,CAAC4B,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CAfJ,EAmBGlB,SAAS,iBACR,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA,SAAvB;AAAkC,IAAA,QAAQ,EAAEW,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADF;AA0BD;;GAxDQjB,I;UAGSF,U,EAOZD,Q;;;KAVGG,I;AA0DT,eAAeA,IAAf,C,CAEA","sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"./Components/UI/Card\";\r\nimport AddUser from \"./Components/User/AddUser\";\r\nimport SearchUserList from \"./Components/User/SearchUserList\";\r\nimport classes from \"./Components/User/AddUser.module.css\";\r\nimport useFetch from \"./Components/CustomHooks/useFetch\";\r\nimport { useHistory } from \"react-router\";\r\nimport MyAvator from \"./Components/CustomHooks/MyAvator\";\r\n\r\n// import UserList from \"./Components/User/UserList\";\r\n// import UserData from \"./Components/Post/MOCK_DATA.json\";\r\n\r\nfunction Home(props) {\r\n  // const [usersList, setUsersList] = useState(UserData);\r\n\r\n  const history = useHistory();\r\n  const [isAdded, setIsAdded] = useState(false);\r\n\r\n  const {\r\n    data: usersList,\r\n    isPending,\r\n    error,\r\n  } = useFetch(\"http://localhost:8000/AllUsers\");\r\n\r\n  const first_name = \"Masoud\";\r\n  const last_name = \"Naji\";\r\n  const Avatar = MyAvator(\r\n    `${first_name.charAt(0)}${last_name.charAt(0)}`,\r\n    `\"#\" + ${Math.floor(Math.random() * 16777215).toString(16)}`,\r\n    `\"#\" + ${Math.floor(Math.random() * 16777215).toString(16)}`\r\n  );\r\n\r\n  const deleteHandler = (id) => {\r\n    // const newUserslist = usersList.filter((userlist) => userlist.id !== id);\r\n    // setData(newUserslist);\r\n    fetch(\"http://localhost:8000/AllUsers/\" + id, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {props.showNewUser ? (\r\n        <AddUser />\r\n      ) : (\r\n        <h2>\r\n          <img id=\"avatar\" alt=\"Avatar\" src={Avatar} />\r\n        </h2>\r\n      )}\r\n\r\n      {error && (\r\n        <Card className={classes.input}>\r\n          <h2>{error}</h2>\r\n        </Card>\r\n      )}\r\n      {isPending && (\r\n        <Card className={classes.input}>\r\n          <h2>... Loading</h2>\r\n        </Card>\r\n      )}\r\n      {usersList && (\r\n        <SearchUserList Users={usersList} Ondelete={deleteHandler} />\r\n      )}\r\n      {/* {usersList && <UserList Users={usersList} Ondelete={deleteHandler} />} */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n//npx json-server --watch Post/db.json --port 8000\r\n"]},"metadata":{},"sourceType":"module"}